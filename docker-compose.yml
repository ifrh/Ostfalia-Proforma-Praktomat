# version: '3'

# perform the following steps in buuild the docker container images: 
# 1.a) fill subfolder 'extra' with needed additional libraries for grading (e.g. JUNIT)
#   b) adjust src/settings_docker.py to your needs
# 2. docker-compose up

services:
  postgres:
    restart: always
    environment:
      POSTGRES_USER: pmuser
      POSTGRES_PASSWORD: pmuserpass
      POSTGRES_DB: pmdb  
      # POSTGRES_INITDB_ARGS: -E UTF8
    image: postgres:17.6
    container_name: praktomat_database3
    #ports:
    # - "5432:5432"
    volumes:
      - db_volume:/var/lib/postgresql/data/


     
  praktomat:

    build:
        context: .
        args:
          LOCALE: de_DE.UTF-8
            # LOCALE: en_US.UTF-8
          PASSWORD: ${PRAKTOMATPASSWORD}
          DOCKER_GROUP_ID: ${DOCKER_GROUP_ID} # grep "docker" /etc/group
    container_name: praktomat3
    # restart container if it exits:
    restart: always
    environment:
      SUPERUSER: praktomat
      EMAIL: ${PRAKTOMATMAIL}
      # todo: check what is needed?
      DB_NAME: pmdb
      DB_USER: pmuser
      DB_PASS: pmuserpass
      DB_PORT: 5432
      DB_HOST: postgres
      DB_DOCKER_SERVICE: praktomat_database3
      DATABASE: postgres
      SVNUSER: ${SVNUSERNAME}
      SVNPASS: ${SVNPASSWORD}
      GITUSER: ${GITUSERNAME}
      GITPASS: ${GITPASSWORD}
      PARALLEL: ${PARALLEL}
      MAX_CPU_LIMIT_SOFT: ${MAX_CPU_LIMIT_SOFT}
      MAX_CPU_LIMIT_HARD: ${MAX_CPU_LIMIT_HARD}

    command: gunicorn wsgi --bind 0.0.0.0:8010 --workers=${WORKERS} --worker-class=gevent --graceful-timeout=120

    # command: gunicorn wsgi --bind 0.0.0.0:8010 --workers=${WORKERS} --worker-class=gevent --graceful-timeout=120 --backlog=${WORKERS}*2
    #command: python3 ./manage-docker.py runserver 0.0.0.0:8010

    volumes:
      # map source folders into container
     - ./src:/praktomat/src # not readonly because migrations and python cache needs to be created!
     - /praktomat/src/migrations # do not store migration files on host
     # /praktomat/docker-sandbox-image cannot be read-only because the extra folder
     # is mapped into it
     - ./docker-sandbox-image:/praktomat/docker-sandbox-image
     - ./extra:/praktomat/docker-sandbox-image/java/extra:ro
     # allow access to docker socket
     - /var/run/docker.sock:/var/run/docker.sock
     - data_volume:/praktomat/data
#    ports:
#      - "8010:8010"
    depends_on:
      - postgres
      
     
# ngninx is needed for the browser interface
  nginx:
    # do not use '_' in container name because django gets confused with _ in host names (Moodle docker)
    container_name: praktomat_nginx3
    restart: always
    build: ./nginx
    volumes:
    # static content to serve
    - ./media:/praktomat/media
    # ssl certificate
    # - /data/certs:/etc/nginx/certs
    ports:
     - 80:80
     # - 443:443
    depends_on:
     - praktomat

volumes:
  data_volume:
  db_volume: